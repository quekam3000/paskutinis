import { AxiosInstance, AxiosRequestConfig } from 'tiktok-api/node_modules/axios';
import { CookieJar } from 'tough-cookie';
import * as API from 'tiktok-api/lib/types';
export default class TikTokAPI {
    readonly config: API.TikTokAPIConfig;
    readonly cookieJar: CookieJar;
    readonly request: AxiosInstance;
    constructor(reqParams: API.StaticRequestParams, apiConfig: API.TikTokAPIConfig, requestConfig?: AxiosRequestConfig);
    loginWithEmail: (email: string, password: string) => Promise<import("tiktok-api/node_modules/axios").AxiosResponse<API.LoginResponse>>;
    loginWithUsername: (username: string, password: string) => Promise<import("tiktok-api/node_modules/axios").AxiosResponse<API.LoginResponse>>;
    login: (params: API.LoginRequest) => Promise<import("tiktok-api/node_modules/axios").AxiosResponse<API.LoginResponse>>;
    getUser: (userId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.UserProfileResponse | API.BaseResponseData>;
    searchUsers: (params: API.UserSearchRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.UserSearchResponse>;
    getQRCode: (userId: string, schemaType?: number) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.QRCodeResponse>;
    getPost: (postId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.GetPostResponse>;
    listPosts: (params: API.ListPostsRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListPostsResponse>;
    listFollowers: (params: API.ListFollowersRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListFollowersResponse>;
    listFollowing: (params: API.ListFollowingRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListFollowingResponse>;
    follow: (userId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.FollowResponse>;
    unfollow: (userId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.FollowResponse>;
    listReceivedFollowRequests: (params: API.ListReceivedFollowRequestsRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListReceivedFollowRequestsResponse>;
    approveFollowRequest: (userId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ApproveFollowResponse>;
    rejectFollowRequest: (userId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.RejectFollowResponse>;
    likePost: (postId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.LikePostResponse>;
    unlikePost: (postId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.LikePostResponse>;
    listComments: (params: API.ListCommentsRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListCommentsResponse>;
    postComment: (postId: string, text: string, tags?: API.Tag[]) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.PostCommentResponse>;
    listCategories: (params?: API.ListCategoriesRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListCategoriesResponse>;
    searchHashtags: (params: API.SearchRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.HashtagSearchResponse>;
    listPostsInHashtag: (params: API.ListPostsInHashtagRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListPostsInHashtagResponse>;
    listForYouFeed: (params?: API.ListFeedRequest | undefined) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListForYouFeedResponse>;
    listFollowingFeed: (params?: API.ListFeedRequest | undefined) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListFeedResponse>;
    getSticker: (stickerId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.GetStickersResponse>;
    getStickers: (stickerIds: string[]) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.GetStickersResponse>;
    listPostsBySticker: (params: API.ListPostsByStickerRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.ListPostsByStickerResponse>;
    joinLiveStream: (id: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.JoinLiveStreamResponse>;
    leaveLiveStream: (id: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData>;
    canStartLiveStream: () => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.CanStartLiveStreamResponse>;
    startLiveStream: (title: string, contactsAuthorized?: number) => Promise<import("tiktok-api/node_modules/axios").AxiosResponse<API.BaseResponseData | API.CreateLiveStreamRoomResponse>>;
    endLiveStream: (roomId: string, streamId: string) => import("tiktok-api/node_modules/axios").AxiosPromise<API.UpdateLiveStreamStatusResponse>;
    createLiveStreamRoom: (title: string, contactsAuthorized?: number) => import("tiktok-api/node_modules/axios").AxiosPromise<API.BaseResponseData | API.CreateLiveStreamRoomResponse>;
    updateLiveStreamStatus: (params: API.UpdateLiveStreamStatusRequest) => import("tiktok-api/node_modules/axios").AxiosPromise<API.UpdateLiveStreamStatusResponse>;
    transformResponse: (data: any) => any;
    private signRequest;
}
export declare const getRequestParams: (requestParams: API.RequiredUserDefinedRequestParams) => API.StaticRequestParams;
export * from 'tiktok-api/lib/types';
